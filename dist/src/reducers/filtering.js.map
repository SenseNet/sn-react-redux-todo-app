{"version":3,"sources":["../../src/reducers/filtering.ts"],"names":[],"mappings":"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","file":"filtering.js","sourcesContent":["import { combineReducers } from 'redux';\r\nimport { Reducers } from 'sn-redux';\r\n\r\nexport const createList = (filter) => {\r\n  const handleToggle = (state, action, filter) => {\r\n    const {result: toggleId, entities} = action.response;\r\n    const {Status} = entities.collection[toggleId];\r\n    const shouldRemove = (\r\n      (Status.indexOf('Active') === - 1 && filter === 'Active') ||\r\n      (Status.indexOf('Completed') === - 1 && filter === 'Completed')\r\n    );\r\n    return shouldRemove ?\r\n      state.filter(Id => Id !== toggleId) :\r\n      state;\r\n  }\r\n  const ids = (state = [], action) => {\r\n    switch (action.type) {\r\n      case 'FETCH_CONTENT_SUCCESS':\r\n        return action.response.result;\r\n      case 'CREATE_CONTENT_SUCCESS':\r\n        return [...state, action.response.result];\r\n      case 'UPDATE_CONTENT_SUCCESS':\r\n        return handleToggle(state, action, filter)\r\n      case 'DELETE_CONTENT_SUCCESS':\r\n        return [...state.slice(0, action.index), ...state.slice(action.index + 1)];\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  const isFetching = (state = false, action) => {\r\n    switch (action.type) {\r\n      case 'FETCH_CONTENT_REQUEST':\r\n        return true;\r\n      case 'FETCH_CONTENT_SUCCESS':\r\n      case 'FETCH_CONTENT_FAILURE':\r\n        return false;\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n\r\n  const errorMessage = (state: any = null, action: any) => {\r\n    switch (action.type) {\r\n      case 'FETCH_CONTENT_FAILURE':\r\n        return action.message;\r\n      case 'FETCH_CONTENT_REQUEST':\r\n      case 'FETCH_CONTENT_SUCCESS':\r\n        return null;\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n\r\n  return combineReducers({\r\n    ids,\r\n    isFetching,\r\n    errorMessage\r\n  });\r\n};\r\n\r\nexport const listByFilter = combineReducers({\r\n  All: createList('All'),\r\n  Active: createList('Active'),\r\n  Completed: createList('Completed')\r\n})\r\n\r\nexport const getVisibleTodos = (state, filter) => {\r\n  const ids = Reducers.getIds(state.listByFilter[filter])\r\n  return ids.map(Id => Reducers.getContent(state.collection.byId, Id));\r\n}\r\n\r\nexport const getIsFetching = (state, filter) =>\r\n  Reducers.getFetching(state.listByFilter[filter]);\r\n\r\nexport const getErrorMessage = (state, filter) =>\r\n  Reducers.getError(state.listByFilter[filter]);"]}